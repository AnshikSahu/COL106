class PointDatabase:    class Point:        def __init__(self,x,y,i):            self.x_coordinate,self.y_coordinate=x,y            self.index=i            self.left_by_x,self.right_by_x=None,None            self.left_by_y,self.right_by_y=None,None    def __init__(self,positionlist):        self.positionlist=positionlist        self.number_of_points=len(positionlist)        self.points=[None]*self.number_of_points        sorted_by_x_coordinate,sorted_by_y_coordinate=[None]*self.number_of_points,[None]*self.number_of_points        for i in range(self.number_of_points): self.points[i]=self.Point(positionlist[i][0],positionlist[i][1],1)        for i in range(self.number_of_points): sorted_by_x_coordinate[i],sorted_by_y_coordinate[i]=self.points[i],self.points[i]        sorted_by_x_coordinate.sort(key=lambda point: point.x_coordinate)        sorted_by_y_coordinate.sort(key=lambda point: point.y_coordinate)        for i in range(self.number_of_points-1):            sorted_by_x_coordinate[i].right_by_x,sorted_by_x_coordinate[i+1].left_by_x=sorted_by_x_coordinate[i+1],sorted_by_x_coordinate[i]            sorted_by_y_coordinate[i].right_by_y,sorted_by_y_coordinate[i+1].left_by_y=sorted_by_y_coordinate[i+1],sorted_by_y_coordinate[i]    def searchNearby(self,q,d):        reference=self.points(self.positionlist.index(q))        nearby_by_x,nearby_by_y=set(),set()        temporary_point=reference.left_by_x        while(temporary_point!=None and temporary_point.x_coordinate>=(reference.x_coordinate-d)):            nearby_by_x.add(temporary_point.index)            temporary_point=temporary_point.left_by_x        temporary_point=reference.left_by_x        while(temporary_point!=None and temporary_point.y_coordinate>=(reference.y_coordinate-d)):            nearby_by_y.add(temporary_point.index)            temporary_point=temporary_point.left_by_y        temporary_point=reference.right_by_x        while(temporary_point!=None and temporary_point.x_coordinate<=(reference.x_coordinate+d)):            nearby_by_x.add(temporary_point.index)            temporary_point=temporary_point.right_by_x        temporary_point=reference.right_by_y        while(temporary_point!=None and temporary_point.y_coordinate<=(reference.y_coordinate+d)):            nearby_by_y.add(temporary_point.index)            temporary_point=temporary_point.right_by_y        nearby=nearby_by_x & nearby_by_y        return [self.positionlist[i] for i in nearby]